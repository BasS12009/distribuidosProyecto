version: '3.8'

services:
  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    ports:
      - "6380:6380"  
    volumes:
      - ./certs:/certs:ro
    command: >
      redis-server
        --tls-port 6380
        --port 0
        --tls-cert-file /certs/redis.crt
        --tls-key-file /certs/redis.key
        --tls-ca-cert-file /certs/ca.crt
        --tls-auth-clients yes
        --save ""
        --appendonly no

    networks:
      - backend



  postgres-registro:
    image: postgres:15
    container_name: postgres-registro
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: password
      POSTGRES_DB: registrodb
    ports:
      - "5432:5432"
    volumes:
      - pgdata-registro:/var/lib/postgresql/data
    networks:
      - backend

  registro-usuario:
    build: ./registro-usuario
    container_name: registro-usuario
    depends_on:
      - postgres-registro
    environment:
      DB_HOST: postgres-registro
      DB_PORT: 5432
      DB_USER: usuario
      DB_PASSWORD: password
      DB_NAME: registrodb
    volumes:
      - ./certs:/certs:ro
    networks:
      - backend

  postgres-autenticacion:
    image: postgres:15
    container_name: postgres-autenticacion
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: password
      POSTGRES_DB: registrodb
    ports:
      - "5433:5433"
    volumes:
      - pgdata-autenticacion:/var/lib/postgresql/data
    networks:
      - backend

  autenticacion:
    build: ./autenticacion
    container_name: autenticacion
    depends_on:
      - postgres-autenticacion
    environment:
      DB_HOST: postgres-autenticacion
      DB_PORT: 5432
      DB_USER: usuario
      DB_PASSWORD: password
      DB_NAME: registrodb
    volumes:
      - ./certs:/certs:ro
    networks:
      - backend
  
  control-permisos:
    build: ./control-permisos
    container_name: control-permisos
    depends_on:
      - redis
    volumes:
      - ./certs:/certs:ro
    networks:
      - backend

  expediente-clinico:
    build: ./expediente-clinico
    container_name: expediente-clinico
    depends_on:
      - redis
      - control-permisos
    ports:
      - "3003:3003"
    environment:
      REDIS_HOST: redis
    volumes:
      - ./certs:/certs:ro
    networks:
      - backend

  notificaciones:
    build: ./notificaciones
    container_name: notificaciones
    depends_on:
      - redis
    volumes:
      - ./certs:/certs:ro
    networks:
      - backend

  documentos-medicos:
    build: ./documentos-medicos
    container_name: documentos-medicos
    ports:
      - "3004:3004" 
    networks:
      - backend
    depends_on:
      - redis
      - postgres-registro
      - postgres-autenticacion
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres-registro 
      DB_PORT: 5432
      DB_USER: usuario
      DB_PASSWORD: password
      DB_NAME: registrodb
    volumes:
      - ./documentos-medicos/uploads:/app/uploads
      - ./certs:/certs:ro

  citas-medicas:
    build: ./citas-medicas
    container_name: citas-medicas
    depends_on:
      - redis
    ports:
      - "3005:3005"
    environment:
      REDIS_HOST: redis
    volumes:
    - ./certs:/certs:ro
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:80"
    depends_on:
      - registro-usuario
    networks:
      - backend

networks:
  backend:

volumes:
  pgdata-registro:
  pgdata-autenticacion:



